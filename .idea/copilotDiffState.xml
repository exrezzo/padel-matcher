<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.gitignore">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.gitignore" />
              <option name="originalContent" value="# macOS&#10;.DS_Store&#10;&#10;# Node / general&#10;node_modules/&#10;.env&#10;.env.*&#10;&#10;# Supabase local artifacts&#10;.supabase/&#10;supabase/.branches/&#10;supabase/.temp/&#10;# Ignore local env with keys&#10;supabase/.env" />
              <option name="updatedContent" value="# macOS&#10;.DS_Store&#10;&#10;# Node / general&#10;node_modules/&#10;.env&#10;.env.*&#10;&#10;# Supabase local artifacts&#10;.supabase/&#10;supabase/.branches/&#10;supabase/.temp/&#10;# Ignore local env with keys&#10;supabase/.env" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/web/config.example.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/web/config.example.js" />
              <option name="updatedContent" value="// Copy this file to config.js and fill in your Supabase anon key.&#10;// The anon key is safe to expose in the browser; it maps to the 'anon' role.&#10;// You can find it in Supabase: Project Settings -&gt; API -&gt; Project API keys -&gt; anon public.&#10;&#10;window.__APP_CONFIG = {&#10;  // Required for production GitHub Pages calls to Edge Functions.&#10;  supabaseAnonKey: &quot;PASTE_YOUR_SUPABASE_ANON_KEY_HERE&quot;&#10;  // Optionally, you could also add supabaseFunctionsUrl to override BASE if needed.&#10;  // supabaseFunctionsUrl: &quot;https://YOUR-REF.functions.supabase.co&quot;&#10;};&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/web/create.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/web/create.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;title&gt;Create Padel Match&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;      :root { color-scheme: light dark; --bg:#0b0c10; --fg:#e5e7eb; --card:#111827; --muted:#9ca3af; }&#10;      html, body { height:100%; margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; background:#0b0c10; color:var(--fg); }&#10;      .wrap { min-height:100%; display:grid; place-items:center; padding:24px; }&#10;      .card { width:100%; max-width:720px; background: rgba(17,24,39,.9); border:1px solid rgba(255,255,255,.08); border-radius:16px; padding:24px; }&#10;      h1 { margin:0 0 12px 0; font-size:24px; }&#10;      p { margin:0 0 12px 0; color:var(--muted); }&#10;      label { display:block; margin:12px 0 4px; color:var(--muted); font-size:14px; }&#10;      input, select, textarea { width:100%; box-sizing:border-box; padding:10px 12px; border-radius:10px; border:1px solid rgba(255,255,255,.08); background: rgba(255,255,255,.05); color:var(--fg); }&#10;      button { margin-top:16px; padding:10px 14px; border-radius:10px; background:#2563eb; color:white; border:none; cursor:pointer; }&#10;      button:disabled { opacity:.6; cursor:not-allowed; }&#10;      pre { margin:12px 0 0 0; padding:12px; background: rgba(255,255,255,.05); border-radius:12px; overflow:auto; }&#10;      .row { display:flex; gap:12px; }&#10;      .row &gt; * { flex: 1 1 0; }&#10;      a { color:#93c5fd; }&#10;      .warn { color:#fde68a; }&#10;    &lt;/style&gt;&#10;    &lt;script src=&quot;config.js&quot; defer&gt;&lt;/script&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;main class=&quot;wrap&quot;&gt;&#10;      &lt;section class=&quot;card&quot;&gt;&#10;        &lt;h1&gt;Create a Padel Match&lt;/h1&gt;&#10;        &lt;p&gt;Fill the fields and submit. Optionally list participant names separated by commas.&lt;/p&gt;&#10;        &lt;form id=&quot;form&quot;&gt;&#10;          &lt;label for=&quot;title&quot;&gt;Title&lt;/label&gt;&#10;          &lt;input id=&quot;title&quot; name=&quot;title&quot; placeholder=&quot;Saturday Morning Match&quot; required /&gt;&#10;&#10;          &lt;div class=&quot;row&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;label for=&quot;status&quot;&gt;Status&lt;/label&gt;&#10;              &lt;select id=&quot;status&quot; name=&quot;status&quot;&gt;&#10;                &lt;option value=&quot;pending&quot; selected&gt;pending&lt;/option&gt;&#10;                &lt;option value=&quot;scheduled&quot;&gt;scheduled&lt;/option&gt;&#10;                &lt;option value=&quot;completed&quot;&gt;completed&lt;/option&gt;&#10;              &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;label for=&quot;participants&quot;&gt;Participants (comma-separated)&lt;/label&gt;&#10;              &lt;input id=&quot;participants&quot; name=&quot;participants&quot; placeholder=&quot;Alice, Bob, Carol&quot; /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;button id=&quot;submit&quot; type=&quot;submit&quot;&gt;Create match&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        &lt;div id=&quot;statusMsg&quot; style=&quot;margin-top:12px;&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;        &lt;pre id=&quot;out&quot;&gt;{}&lt;/pre&gt;&#10;        &lt;p style=&quot;margin-top:12px&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;Back to viewer&lt;/a&gt;&lt;/p&gt;&#10;      &lt;/section&gt;&#10;    &lt;/main&gt;&#10;&#10;    &lt;script&gt;&#10;      const isLocal = location.hostname === &quot;localhost&quot; || location.hostname === &quot;127.0.0.1&quot;;&#10;      const localBase = `${location.protocol}//${location.hostname}:54321`;&#10;      const BASE = isLocal&#10;          ? localBase&#10;          : &quot;https://epbxkcopfodxdseteqlh.functions.supabase.co&quot;;&#10;      const anonKey = isLocal ?&#10;          null :&#10;          &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwYnhrY29wZm9keGRzZXRlcWxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzODY0OTgsImV4cCI6MjA3Mzk2MjQ5OH0.JNifi9ckldkZi7eKJkCnPBtOPM1y5eLZTKJ19THY-YI&quot;&#10;&#10;      function buildHeaders() {&#10;        const base = { &quot;Content-Type&quot;: &quot;application/json&quot; };&#10;        if (isLocal) return base;&#10;        if (!anonKey) {&#10;          const warn = document.createElement(&quot;div&quot;);&#10;          warn.className = &quot;warn&quot;;&#10;          warn.textContent = &quot;Missing anon key (config.js). Some actions may fail (401).&quot;;&#10;          document.querySelector(&quot;.card&quot;).prepend(warn);&#10;          return base;&#10;        }&#10;        return { ...base, apikey: anonKey, Authorization: `Bearer ${anonKey}` };&#10;      }&#10;&#10;      const form = document.getElementById(&quot;form&quot;);&#10;      const btn = document.getElementById(&quot;submit&quot;);&#10;      const out = document.getElementById(&quot;out&quot;);&#10;      const statusMsg = document.getElementById(&quot;statusMsg&quot;);&#10;&#10;      form.addEventListener(&quot;submit&quot;, async (e) =&gt; {&#10;        e.preventDefault();&#10;        btn.disabled = true;&#10;        statusMsg.textContent = &quot;Submittingâ€¦&quot;;&#10;        out.textContent = &quot;{}&quot;;&#10;&#10;        const title = (document.getElementById(&quot;title&quot;).value || &quot;&quot;).trim();&#10;        const status = (document.getElementById(&quot;status&quot;).value || &quot;pending&quot;).trim();&#10;        const participantsStr = (document.getElementById(&quot;participants&quot;).value || &quot;&quot;).trim();&#10;        const participants = participantsStr&#10;          ? participantsStr.split(&quot;,&quot;).map(s =&gt; ({ name: s.trim() })).filter(p =&gt; p.name.length)&#10;          : [];&#10;&#10;        try {&#10;          const res = await fetch(`${BASE}/functions/v1/create-match`, {&#10;            method: &quot;POST&quot;,&#10;            headers: buildHeaders(),&#10;            body: JSON.stringify({ title, status, participants }),&#10;          });&#10;          const json = await res.json();&#10;          out.textContent = JSON.stringify(json, null, 2);&#10;          if (!res.ok || !json.ok) {&#10;            statusMsg.textContent = `Error: ${json.error || res.statusText}`;&#10;            return;&#10;          }&#10;          // Redirect to the viewer with the new id&#10;          const next = `index.html?id=${encodeURIComponent(json.match.id)}`;&#10;          window.location.href = next;&#10;        } catch (err) {&#10;          statusMsg.textContent = `Request failed`;&#10;          out.textContent = String(err);&#10;        } finally {&#10;          btn.disabled = false;&#10;        }&#10;      });&#10;    &lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;title&gt;Create Padel Match&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;      :root { color-scheme: light dark; --bg:#0b0c10; --fg:#e5e7eb; --card:#111827; --muted:#9ca3af; }&#10;      html, body { height:100%; margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; background:#0b0c10; color:var(--fg); }&#10;      .wrap { min-height:100%; display:grid; place-items:center; padding:24px; }&#10;      .card { width:100%; max-width:720px; background: rgba(17,24,39,.9); border:1px solid rgba(255,255,255,.08); border-radius:16px; padding:24px; }&#10;      h1 { margin:0 0 12px 0; font-size:24px; }&#10;      p { margin:0 0 12px 0; color:var(--muted); }&#10;      label { display:block; margin:12px 0 4px; color:var(--muted); font-size:14px; }&#10;      input, select, textarea { width:100%; box-sizing:border-box; padding:10px 12px; border-radius:10px; border:1px solid rgba(255,255,255,.08); background: rgba(255,255,255,.05); color:var(--fg); }&#10;      button { margin-top:16px; padding:10px 14px; border-radius:10px; background:#2563eb; color:white; border:none; cursor:pointer; }&#10;      button:disabled { opacity:.6; cursor:not-allowed; }&#10;      pre { margin:12px 0 0 0; padding:12px; background: rgba(255,255,255,.05); border-radius:12px; overflow:auto; }&#10;      .row { display:flex; gap:12px; }&#10;      .row &gt; * { flex: 1 1 0; }&#10;      a { color:#93c5fd; }&#10;      .warn { color:#fde68a; }&#10;    &lt;/style&gt;&#10;    &lt;!-- config.js removed: anon key is hardcoded below for production --&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;main class=&quot;wrap&quot;&gt;&#10;      &lt;section class=&quot;card&quot;&gt;&#10;        &lt;h1&gt;Create a Padel Match&lt;/h1&gt;&#10;        &lt;p&gt;Fill the fields and submit. Optionally list participant names separated by commas.&lt;/p&gt;&#10;        &lt;form id=&quot;form&quot;&gt;&#10;          &lt;label for=&quot;title&quot;&gt;Title&lt;/label&gt;&#10;          &lt;input id=&quot;title&quot; name=&quot;title&quot; placeholder=&quot;Saturday Morning Match&quot; required /&gt;&#10;&#10;          &lt;div class=&quot;row&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;label for=&quot;status&quot;&gt;Status&lt;/label&gt;&#10;              &lt;select id=&quot;status&quot; name=&quot;status&quot;&gt;&#10;                &lt;option value=&quot;pending&quot; selected&gt;pending&lt;/option&gt;&#10;                &lt;option value=&quot;scheduled&quot;&gt;scheduled&lt;/option&gt;&#10;                &lt;option value=&quot;completed&quot;&gt;completed&lt;/option&gt;&#10;              &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;label for=&quot;participants&quot;&gt;Participants (comma-separated)&lt;/label&gt;&#10;              &lt;input id=&quot;participants&quot; name=&quot;participants&quot; placeholder=&quot;Alice, Bob, Carol&quot; /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;button id=&quot;submit&quot; type=&quot;submit&quot;&gt;Create match&lt;/button&gt;&#10;        &lt;/form&gt;&#10;        &lt;div id=&quot;statusMsg&quot; style=&quot;margin-top:12px;&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;        &lt;pre id=&quot;out&quot;&gt;{}&lt;/pre&gt;&#10;        &lt;p style=&quot;margin-top:12px&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;Back to viewer&lt;/a&gt;&lt;/p&gt;&#10;      &lt;/section&gt;&#10;    &lt;/main&gt;&#10;&#10;    &lt;script&gt;&#10;      const isLocal = location.hostname === &quot;localhost&quot; || location.hostname === &quot;127.0.0.1&quot;;&#10;      const localBase = `${location.protocol}//${location.hostname}:54321`;&#10;      const BASE = isLocal&#10;          ? localBase&#10;          : &quot;https://epbxkcopfodxdseteqlh.functions.supabase.co&quot;;&#10;      const anonKey = isLocal ? null : &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwYnhrY29wZm9keGRzZXRlcWxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzODY0OTgsImV4cCI6MjA3Mzk2MjQ5OH0.JNifi9ckldkZi7eKJkCnPBtOPM1y5eLZTKJ19THY-YI&quot;;&#10;&#10;      function buildHeaders() {&#10;        const base = { &quot;Content-Type&quot;: &quot;application/json&quot; };&#10;        if (isLocal) return base;&#10;        if (!anonKey) {&#10;          const warn = document.createElement(&quot;div&quot;);&#10;          warn.className = &quot;warn&quot;;&#10;          warn.textContent = &quot;Missing anon key. Some actions may fail (401).&quot;;&#10;          document.querySelector(&quot;.card&quot;).prepend(warn);&#10;          return base;&#10;        }&#10;        return { ...base, apikey: anonKey, Authorization: `Bearer ${anonKey}` };&#10;      }&#10;&#10;      const form = document.getElementById(&quot;form&quot;);&#10;      const btn = document.getElementById(&quot;submit&quot;);&#10;      const out = document.getElementById(&quot;out&quot;);&#10;      const statusMsg = document.getElementById(&quot;statusMsg&quot;);&#10;&#10;      form.addEventListener(&quot;submit&quot;, async (e) =&gt; {&#10;        e.preventDefault();&#10;        btn.disabled = true;&#10;        statusMsg.textContent = &quot;Submittingâ€¦&quot;;&#10;        out.textContent = &quot;{}&quot;;&#10;&#10;        const title = (document.getElementById(&quot;title&quot;).value || &quot;&quot;).trim();&#10;        const status = (document.getElementById(&quot;status&quot;).value || &quot;pending&quot;).trim();&#10;        const participantsStr = (document.getElementById(&quot;participants&quot;).value || &quot;&quot;).trim();&#10;        const participants = participantsStr&#10;          ? participantsStr.split(&quot;,&quot;).map(s =&gt; ({ name: s.trim() })).filter(p =&gt; p.name.length)&#10;          : [];&#10;&#10;        try {&#10;          const res = await fetch(`${BASE}/functions/v1/create-match`, {&#10;            method: &quot;POST&quot;,&#10;            headers: buildHeaders(),&#10;            body: JSON.stringify({ title, status, participants }),&#10;          });&#10;          const json = await res.json();&#10;          out.textContent = JSON.stringify(json, null, 2);&#10;          if (!res.ok || !json.ok) {&#10;            statusMsg.textContent = `Error: ${json.error || res.statusText}`;&#10;            return;&#10;          }&#10;          // Redirect to the viewer with the new id&#10;          const next = `index.html?id=${encodeURIComponent(json.match.id)}`;&#10;          window.location.href = next;&#10;        } catch (err) {&#10;          statusMsg.textContent = `Request failed`;&#10;          out.textContent = String(err);&#10;        } finally {&#10;          btn.disabled = false;&#10;        }&#10;      });&#10;    &lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/web/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/web/index.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;title&gt;Padel Match Viewer&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;      :root { color-scheme: light dark; --bg:#0b0c10; --fg:#e5e7eb; --card:#111827; --muted:#9ca3af; }&#10;      html, body { height:100%; margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; background:#0b0c10; color:var(--fg); }&#10;      .wrap { min-height:100%; display:grid; place-items:center; padding:24px; }&#10;      .card { width:100%; max-width:820px; background: rgba(17,24,39,.9); border:1px solid rgba(255,255,255,.08); border-radius:16px; padding:24px; }&#10;      h1 { margin:0 0 12px 0; font-size:24px; }&#10;      h2 { margin:16px 0 8px; font-size:18px; }&#10;      p { margin:0 0 12px 0; color:var(--muted); }&#10;      .grid { display:grid; grid-template-columns: 140px 1fr; gap:6px 12px; }&#10;      .label { color:var(--muted); }&#10;      code { background: rgba(255,255,255,.06); padding:2px 6px; border-radius:6px; }&#10;      ul { margin:8px 0 0 0; padding-left:18px; }&#10;      li { margin:4px 0; }&#10;      form.inline { display:flex; gap:8px; margin-top:8px; }&#10;      input, select { padding:8px 10px; border-radius:8px; border:1px solid rgba(255,255,255,.08); background: rgba(255,255,255,.05); color:var(--fg); }&#10;      button { padding:8px 12px; border-radius:8px; background:#2563eb; color:white; border:none; cursor:pointer; }&#10;      button:disabled { opacity:.6; cursor:not-allowed; }&#10;      .muted { color:var(--muted); }&#10;      a { color:#93c5fd; }&#10;      .row { display:flex; gap:10px; align-items:center; }&#10;      .sep { opacity:.35; }&#10;      .error { color: #fecaca; }&#10;      .warn { color: #fde68a; }&#10;    &lt;/style&gt;&#10;    &lt;script src=&quot;config.js&quot; defer&gt;&lt;/script&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;main class=&quot;wrap&quot;&gt;&#10;      &lt;section class=&quot;card&quot; role=&quot;region&quot; aria-labelledby=&quot;title&quot;&gt;&#10;        &lt;h1 id=&quot;title&quot;&gt;Padel match&lt;/h1&gt;&#10;        &lt;p id=&quot;desc&quot;&gt;Loadingâ€¦&lt;/p&gt;&#10;&#10;        &lt;div id=&quot;details&quot; style=&quot;display:none&quot;&gt;&#10;          &lt;div class=&quot;grid&quot; aria-describedby=&quot;desc&quot;&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Title&lt;/div&gt;&#10;            &lt;div id=&quot;m_title&quot; class=&quot;row&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Status&lt;/div&gt;&#10;            &lt;div id=&quot;m_status&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Created&lt;/div&gt;&#10;            &lt;div id=&quot;m_created&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;ID&lt;/div&gt;&#10;            &lt;div&gt;&lt;code id=&quot;m_id&quot;&gt;&lt;/code&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;h2&gt;Participants&lt;/h2&gt;&#10;          &lt;ul id=&quot;participants&quot;&gt;&lt;/ul&gt;&#10;          &lt;form id=&quot;p_form&quot; class=&quot;inline&quot; autocomplete=&quot;off&quot;&gt;&#10;            &lt;input id=&quot;p_name&quot; name=&quot;name&quot; placeholder=&quot;Participant name&quot; required /&gt;&#10;            &lt;select id=&quot;p_status&quot; name=&quot;status&quot;&gt;&#10;              &lt;option value=&quot;invited&quot; selected&gt;invited&lt;/option&gt;&#10;              &lt;option value=&quot;confirmed&quot;&gt;confirmed&lt;/option&gt;&#10;              &lt;option value=&quot;declined&quot;&gt;declined&lt;/option&gt;&#10;            &lt;/select&gt;&#10;            &lt;button id=&quot;p_add&quot; type=&quot;submit&quot;&gt;Add&lt;/button&gt;&#10;          &lt;/form&gt;&#10;          &lt;div id=&quot;p_msg&quot; class=&quot;muted&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;p style=&quot;margin-top:16px&quot;&gt;&lt;a href=&quot;create.html&quot;&gt;Create a new match&lt;/a&gt;&lt;/p&gt;&#10;      &lt;/section&gt;&#10;    &lt;/main&gt;&#10;&#10;    &lt;script&gt;&#10;      (function () {&#10;        const params = new URLSearchParams(location.search);&#10;        const UUID = (params.get(&quot;id&quot;) || &quot;&quot;).trim();&#10;&#10;        const desc = document.getElementById(&quot;desc&quot;);&#10;        const details = document.getElementById(&quot;details&quot;);&#10;        const mTitle = document.getElementById(&quot;m_title&quot;);&#10;        const mStatus = document.getElementById(&quot;m_status&quot;);&#10;        const mCreated = document.getElementById(&quot;m_created&quot;);&#10;        const mId = document.getElementById(&quot;m_id&quot;);&#10;        const list = document.getElementById(&quot;participants&quot;);&#10;        const pForm = document.getElementById(&quot;p_form&quot;);&#10;        const pName = document.getElementById(&quot;p_name&quot;);&#10;        const pStatus = document.getElementById(&quot;p_status&quot;);&#10;        const pMsg = document.getElementById(&quot;p_msg&quot;);&#10;&#10;        if (!UUID) {&#10;          desc.textContent = &quot;No match id provided. Use ?id=&lt;uuid&gt; or create a new match.&quot;;&#10;          return;&#10;        }&#10;&#10;        const isLocal = location.hostname === &quot;localhost&quot; || location.hostname === &quot;127.0.0.1&quot;;&#10;        const localBase = `${location.protocol}//${location.hostname}:54321`;&#10;        const BASE = isLocal ? localBase : &quot;https://epbxkcopfodxdseteqlh.functions.supabase.co&quot;;&#10;        const anonKey = isLocal ?&#10;              null :&#10;              &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwYnhrY29wZm9keGRzZXRlcWxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzODY0OTgsImV4cCI6MjA3Mzk2MjQ5OH0.JNifi9ckldkZi7eKJkCnPBtOPM1y5eLZTKJ19THY-YI&quot;&#10;&#10;        function buildHeaders() {&#10;          const base = { &quot;Content-Type&quot;: &quot;application/json&quot; };&#10;          if (isLocal) return base;&#10;          if (!anonKey) {&#10;            // Show a warning and still try without headers&#10;            const warn = document.createElement(&quot;div&quot;);&#10;            warn.className = &quot;warn&quot;;&#10;            warn.textContent = &quot;Missing anon key (config.js). Some actions may fail (401).&quot;;&#10;            document.querySelector(&quot;.card&quot;).prepend(warn);&#10;            return base;&#10;          }&#10;          return { ...base, apikey: anonKey, Authorization: `Bearer ${anonKey}` };&#10;        }&#10;&#10;        async function fetchMatch() {&#10;          desc.textContent = &quot;Loadingâ€¦&quot;;&#10;          details.style.display = &quot;none&quot;;&#10;          try {&#10;            const res = await fetch(`${BASE}/functions/v1/get-match?id=${encodeURIComponent(UUID)}`, {&#10;              headers: buildHeaders(),&#10;            });&#10;            const json = await res.json();&#10;            if (!res.ok || !json.ok) {&#10;              desc.textContent = `Error: ${json.error || res.statusText}`;&#10;              return;&#10;            }&#10;            render(json.match);&#10;          } catch (e) {&#10;            desc.textContent = `Request failed`;&#10;          }&#10;        }&#10;&#10;        function render(match) {&#10;          document.title = `Padel Match â€¢ ${match.title}`;&#10;          desc.textContent = `Match ${match.id}`;&#10;          mTitle.textContent = match.title;&#10;          mStatus.textContent = match.status;&#10;          mCreated.textContent = new Date(match.created_at).toLocaleString();&#10;          mId.textContent = match.id;&#10;          details.style.display = &quot;block&quot;;&#10;&#10;          list.innerHTML = &quot;&quot;;&#10;          const participants = Array.isArray(match.match_participants) ? match.match_participants : [];&#10;          if (participants.length === 0) {&#10;            const li = document.createElement(&quot;li&quot;);&#10;            li.className = &quot;muted&quot;;&#10;            li.textContent = &quot;No participants yet&quot;;&#10;            list.appendChild(li);&#10;          } else {&#10;            for (const p of participants) {&#10;              const li = document.createElement(&quot;li&quot;);&#10;              li.textContent = `${p.name} â€” ${p.status}`;&#10;              list.appendChild(li);&#10;            }&#10;          }&#10;        }&#10;&#10;        pForm.addEventListener(&quot;submit&quot;, async (e) =&gt; {&#10;          e.preventDefault();&#10;          const name = (pName.value || &quot;&quot;).trim();&#10;          const status = (pStatus.value || &quot;invited&quot;).trim();&#10;          if (!name) { pMsg.textContent = &quot;Name is required&quot;; return; }&#10;          pMsg.textContent = &quot;Addingâ€¦&quot;;&#10;          pForm.querySelector(&quot;button&quot;).disabled = true;&#10;&#10;          try {&#10;            const res = await fetch(`${BASE}/functions/v1/add-participant`, {&#10;              method: &quot;POST&quot;,&#10;              headers: buildHeaders(),&#10;              body: JSON.stringify({ match_id: UUID, name, status }),&#10;            });&#10;            const json = await res.json();&#10;            if (!res.ok || !json.ok) {&#10;              pMsg.textContent = `Error: ${json.error || res.statusText}`;&#10;              return;&#10;            }&#10;            pName.value = &quot;&quot;;&#10;            pStatus.value = &quot;invited&quot;;&#10;            pMsg.textContent = &quot;Added&quot;;&#10;            await fetchMatch();&#10;          } catch (err) {&#10;            pMsg.textContent = &quot;Request failed&quot;;&#10;          } finally {&#10;            pForm.querySelector(&quot;button&quot;).disabled = false;&#10;          }&#10;        });&#10;&#10;        fetchMatch();&#10;      })();&#10;    &lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;utf-8&quot; /&gt;&#10;    &lt;title&gt;Padel Match Viewer&lt;/title&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;&#10;    &lt;style&gt;&#10;      :root { color-scheme: light dark; --bg:#0b0c10; --fg:#e5e7eb; --card:#111827; --muted:#9ca3af; }&#10;      html, body { height:100%; margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; background:#0b0c10; color:var(--fg); }&#10;      .wrap { min-height:100%; display:grid; place-items:center; padding:24px; }&#10;      .card { width:100%; max-width:820px; background: rgba(17,24,39,.9); border:1px solid rgba(255,255,255,.08); border-radius:16px; padding:24px; }&#10;      h1 { margin:0 0 12px 0; font-size:24px; }&#10;      h2 { margin:16px 0 8px; font-size:18px; }&#10;      p { margin:0 0 12px 0; color:var(--muted); }&#10;      .grid { display:grid; grid-template-columns: 140px 1fr; gap:6px 12px; }&#10;      .label { color:var(--muted); }&#10;      code { background: rgba(255,255,255,.06); padding:2px 6px; border-radius:6px; }&#10;      ul { margin:8px 0 0 0; padding-left:18px; }&#10;      li { margin:4px 0; }&#10;      form.inline { display:flex; gap:8px; margin-top:8px; }&#10;      input, select { padding:8px 10px; border-radius:8px; border:1px solid rgba(255,255,255,.08); background: rgba(255,255,255,.05); color:var(--fg); }&#10;      button { padding:8px 12px; border-radius:8px; background:#2563eb; color:white; border:none; cursor:pointer; }&#10;      button:disabled { opacity:.6; cursor:not-allowed; }&#10;      .muted { color:var(--muted); }&#10;      a { color:#93c5fd; }&#10;      .row { display:flex; gap:10px; align-items:center; }&#10;      .sep { opacity:.35; }&#10;      .error { color: #fecaca; }&#10;      .warn { color: #fde68a; }&#10;    &lt;/style&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;main class=&quot;wrap&quot;&gt;&#10;      &lt;section class=&quot;card&quot; role=&quot;region&quot; aria-labelledby=&quot;title&quot;&gt;&#10;        &lt;h1 id=&quot;title&quot;&gt;Padel match&lt;/h1&gt;&#10;        &lt;p id=&quot;desc&quot;&gt;Loadingâ€¦&lt;/p&gt;&#10;&#10;        &lt;div id=&quot;details&quot; style=&quot;display:none&quot;&gt;&#10;          &lt;div class=&quot;grid&quot; aria-describedby=&quot;desc&quot;&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Title&lt;/div&gt;&#10;            &lt;div id=&quot;m_title&quot; class=&quot;row&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Status&lt;/div&gt;&#10;            &lt;div id=&quot;m_status&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Created&lt;/div&gt;&#10;            &lt;div id=&quot;m_created&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;label&quot;&gt;ID&lt;/div&gt;&#10;            &lt;div&gt;&lt;code id=&quot;m_id&quot;&gt;&lt;/code&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;h2&gt;Participants&lt;/h2&gt;&#10;          &lt;ul id=&quot;participants&quot;&gt;&lt;/ul&gt;&#10;          &lt;form id=&quot;p_form&quot; class=&quot;inline&quot; autocomplete=&quot;off&quot;&gt;&#10;            &lt;input id=&quot;p_name&quot; name=&quot;name&quot; placeholder=&quot;Participant name&quot; required /&gt;&#10;            &lt;select id=&quot;p_status&quot; name=&quot;status&quot;&gt;&#10;              &lt;option value=&quot;invited&quot; selected&gt;invited&lt;/option&gt;&#10;              &lt;option value=&quot;confirmed&quot;&gt;confirmed&lt;/option&gt;&#10;              &lt;option value=&quot;declined&quot;&gt;declined&lt;/option&gt;&#10;            &lt;/select&gt;&#10;            &lt;button id=&quot;p_add&quot; type=&quot;submit&quot;&gt;Add&lt;/button&gt;&#10;          &lt;/form&gt;&#10;          &lt;div id=&quot;p_msg&quot; class=&quot;muted&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;p style=&quot;margin-top:16px&quot;&gt;&lt;a href=&quot;create.html&quot;&gt;Create a new match&lt;/a&gt;&lt;/p&gt;&#10;      &lt;/section&gt;&#10;    &lt;/main&gt;&#10;&#10;    &lt;script&gt;&#10;      (function () {&#10;        const params = new URLSearchParams(location.search);&#10;        const UUID = (params.get(&quot;id&quot;) || &quot;&quot;).trim();&#10;&#10;        const desc = document.getElementById(&quot;desc&quot;);&#10;        const details = document.getElementById(&quot;details&quot;);&#10;        const mTitle = document.getElementById(&quot;m_title&quot;);&#10;        const mStatus = document.getElementById(&quot;m_status&quot;);&#10;        const mCreated = document.getElementById(&quot;m_created&quot;);&#10;        const mId = document.getElementById(&quot;m_id&quot;);&#10;        const list = document.getElementById(&quot;participants&quot;);&#10;        const pForm = document.getElementById(&quot;p_form&quot;);&#10;        const pName = document.getElementById(&quot;p_name&quot;);&#10;        const pStatus = document.getElementById(&quot;p_status&quot;);&#10;        const pMsg = document.getElementById(&quot;p_msg&quot;);&#10;&#10;        if (!UUID) {&#10;          desc.textContent = &quot;No match id provided. Use ?id=&lt;uuid&gt; or create a new match.&quot;;&#10;          return;&#10;        }&#10;&#10;        const isLocal = location.hostname === &quot;localhost&quot; || location.hostname === &quot;127.0.0.1&quot;;&#10;        const localBase = `${location.protocol}//${location.hostname}:54321`;&#10;        const BASE = isLocal ? localBase : &quot;https://epbxkcopfodxdseteqlh.functions.supabase.co&quot;;&#10;        const anonKey = isLocal ? null : &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwYnhrY29wZm9keGRzZXRlcWxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzODY0OTgsImV4cCI6MjA3Mzk2MjQ5OH0.JNifi9ckldkZi7eKJkCnPBtOPM1y5eLZTKJ19THY-YI&quot;;&#10;&#10;        function buildHeaders() {&#10;          const base = { &quot;Content-Type&quot;: &quot;application/json&quot; };&#10;          if (isLocal) return base;&#10;          if (!anonKey) {&#10;            const warn = document.createElement(&quot;div&quot;);&#10;            warn.className = &quot;warn&quot;;&#10;            warn.textContent = &quot;Missing anon key. Some actions may fail (401).&quot;;&#10;            document.querySelector(&quot;.card&quot;).prepend(warn);&#10;            return base;&#10;          }&#10;          return { ...base, apikey: anonKey, Authorization: `Bearer ${anonKey}` };&#10;        }&#10;&#10;        async function fetchMatch() {&#10;          desc.textContent = &quot;Loadingâ€¦&quot;;&#10;          details.style.display = &quot;none&quot;;&#10;          try {&#10;            const res = await fetch(`${BASE}/functions/v1/get-match?id=${encodeURIComponent(UUID)}`, {&#10;              headers: buildHeaders(),&#10;            });&#10;            const json = await res.json();&#10;            if (!res.ok || !json.ok) {&#10;              desc.textContent = `Error: ${json.error || res.statusText}`;&#10;              return;&#10;            }&#10;            render(json.match);&#10;          } catch (e) {&#10;            desc.textContent = `Request failed`;&#10;          }&#10;        }&#10;&#10;        function render(match) {&#10;          document.title = `Padel Match â€¢ ${match.title}`;&#10;          desc.textContent = `Match ${match.id}`;&#10;          mTitle.textContent = match.title;&#10;          mStatus.textContent = match.status;&#10;          mCreated.textContent = new Date(match.created_at).toLocaleString();&#10;          mId.textContent = match.id;&#10;          details.style.display = &quot;block&quot;;&#10;&#10;          list.innerHTML = &quot;&quot;;&#10;          const participants = Array.isArray(match.match_participants) ? match.match_participants : [];&#10;          if (participants.length === 0) {&#10;            const li = document.createElement(&quot;li&quot;);&#10;            li.className = &quot;muted&quot;;&#10;            li.textContent = &quot;No participants yet&quot;;&#10;            list.appendChild(li);&#10;          } else {&#10;            for (const p of participants) {&#10;              const li = document.createElement(&quot;li&quot;);&#10;              li.textContent = `${p.name} â€” ${p.status}`;&#10;              list.appendChild(li);&#10;            }&#10;          }&#10;        }&#10;&#10;        pForm.addEventListener(&quot;submit&quot;, async (e) =&gt; {&#10;          e.preventDefault();&#10;          const name = (pName.value || &quot;&quot;).trim();&#10;          const status = (pStatus.value || &quot;invited&quot;).trim();&#10;          if (!name) { pMsg.textContent = &quot;Name is required&quot;; return; }&#10;          pMsg.textContent = &quot;Addingâ€¦&quot;;&#10;          pForm.querySelector(&quot;button&quot;).disabled = true;&#10;&#10;          try {&#10;            const res = await fetch(`${BASE}/functions/v1/add-participant`, {&#10;              method: &quot;POST&quot;,&#10;              headers: buildHeaders(),&#10;              body: JSON.stringify({ match_id: UUID, name, status }),&#10;            });&#10;            const json = await res.json();&#10;            if (!res.ok || !json.ok) {&#10;              pMsg.textContent = `Error: ${json.error || res.statusText}`;&#10;              return;&#10;            }&#10;            pName.value = &quot;&quot;;&#10;            pStatus.value = &quot;invited&quot;;&#10;            pMsg.textContent = &quot;Added&quot;;&#10;            await fetchMatch();&#10;          } catch (err) {&#10;            pMsg.textContent = &quot;Request failed&quot;;&#10;          } finally {&#10;            pForm.querySelector(&quot;button&quot;).disabled = false;&#10;          }&#10;        });&#10;&#10;        fetchMatch();&#10;      })();&#10;    &lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>